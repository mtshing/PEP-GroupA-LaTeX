%\ProvidesPackage{package}



%%%%%%%%%%%%%%%%%%%%% packages %%%%%%%%%%%%%%%%%%%%%%

% for create command with multiple optional arguments
% e.g. \NewDocumentCommand{\mycmd}{ O{default1} O{default2} m }{#1 #2 #3}
% O = optional with default values, o = optional but return empty if none, m = mandatory
\usepackage{xparse}

\usepackage{amssymb}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{amsthm} % theorem environment
\usepackage{mathtools}
%\usepackage{bm} % bold math symbol
\usepackage{cancel} % for cancel/cross out line on equation

\usepackage{physics} % many short form to math symbols
% e.g.
% type \qty before brackets automatically resize it by it contents
% \abs = ||
% \dd[]{} = d^n x, \dv[]{}{} = d^n f/dx, \pdv[]{}{} = partial d 
% \eval_{}^{} = vertical bar + subst value (after integrate/differentiate)
% \grad, \div, \curl
% also some matrix notation

% write 1st, 2nd... using command \nth{1}, \nth{2}, ...
\usepackage[super]{nth} 

%\usepackage{algorithm2e} % pseudocode environment
%\usepackage{chemformula} % chemical symbol, equations

% some general symbol, e.g. degree symbol, celcius, micro mu, 
\usepackage{textcomp,gensymb}

% allow inter-doc link, hyperlink
\usepackage{hyperref}

% more unicode symbol
%\usepackage{wasysym}

% fancier formatting on title
\usepackage{titling}

% for creating a box containing paragraph of text
\usepackage{framed}

%\usepackage{makeidx} % allow index referencing (like index in book)
\usepackage{chngcntr} % change index of figure/equation... relation to section/subsection


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% table thingy

% vanilla latex command = \begin{tabular}[pos]{cols}
% where pos control vertical alignment of text (not useful)
% cols control horizontal alignment of text
% e.g. {col} = {c|c|c} = 3 center aligned col with 2 vertical sep line
%   l = left align
%   c = center align
%   r = right align
%   p{"width"} = text vertically top aligned, fixed col width

\usepackage{array}
% array allow fixed with control for individual columns 
% more alphabets for {col}: 
%   m{"width"} = text vertically middle aligned, fixed col width
%   b{"width"} = text vertically bottom aligned, fixed col width
%
% but their text is default to left align. To fix that, add
% >{\raggedright\arraybackslash} or >{\centering\arraybackslash} or >{\raggedleft\arraybackslash}
% before the alphabet 

\usepackage{tabularx}
% use tabularx for fixing the width of whole table 
% e.g. \begin{tabularx}{0.8\textwidth}{X|X|X}
% X = any alphabet above

%\usepackage{makecell} % allow line break within a cell in tables
%\usepackage{multicol}

% dvipsnames = more default colour name
% table = for colouring table
\usepackage[dvipsnames, table]{xcolor} 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% figure thingy

% cant use \includegraphics without this
\usepackage{graphicx} 

\usepackage{wrapfig}

\usepackage{subcaption}
\captionsetup[subfigure]{labelformat=empty} % default to be without (a), (b) in subcaption

% standard syntax for making a grid of img. Use \\ to open new row
%\begin{figure}
%   \begin{subfigure}{.5\textwidth}
%       \centering
%       \includegraphics[height=3cm]{img_file_name}
%   \caption{Test subfigure 1}
%   \end{subfigure}
%   %
%   \begin{subfigure}{.5\textwidth}
%       \centering
%       \includegraphics[height=3cm]{img_file_name}
%       \caption{Test subfigure 2}
%   \end{subfigure}
%   %
%   \caption{Two subfigures}
%\end{figure}

% use minipage to divide into grids of img and text
%
%\begin{center}
%    \begin{minipage}{0.48\linewidth}
%        \centering
%        \includegraphics[width=\linewidth]{example-image-a}
%        \caption{Dummy Caption A.}
%    \end{minipage}\hfill
%        \begin{minipage}{0.48\linewidth}
%        \centering
%        \includegraphics[width=\linewidth]{example-image-b}
%        \caption{Dummy Caption B.}
%    \end{minipage}
%\end{center}

% useful ref for alignment
% https://tex.stackexchange.com/questions/378548/vertical-alignment-of-side-by-side-minipages

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% tikz thingy
\usepackage{tikz}
\usepackage{calc}
\usetikzlibrary{tikzmark, calc, positioning, matrix, quotes}

% use tikzmark to make arrow pointing a character
% mark the character being point to by appending \tikzmark{label_name}. In tikzpicture envr, call this point by (pic cs:label_name)
% enclose with $ $ for calculation
% example: 
% \begin{tikzpicture}[overlay,remember picture]
%   \draw[arrows=->, draw=red] 
%       ( $ (pic cs:label_name) +(6pt,-2.5ex) $ ) -- ( $ (pic cs:label_name) +(6pt,-0.5ex) $ );
%   \node[anchor=north, text=red]
%       at ( $ (pic cs:label_name) +(6pt,-2ex) $ )
%       {my_text};
% \end{tikzpicture}

% positioning library = allow relative position

% quotes library = a better library for adding text to elements

% matrix library convert every element into tikz node
% tikz matrix must be syntax-ly enclosed by \begin{align*} \end{align*}, not just { and }
